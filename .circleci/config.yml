version: 2
jobs:
  init_and_plan:
    docker:
      - image: shakurit0/docker-for-tf-with-gcloud
    steps:
     - checkout
     - setup_remote_docker
     - run:
         name: init plugins and build infrastructure
         command: |
           echo $GOOGLE_CRED > terraform/credentials.json
           export GOOGLE_APPLICATION_CREDENTIALS="/root/project/terraform/credentials.json"
           cd terraform/
           terraform init
           terraform plan
  deploy:
    docker:
      - image: shakurit0/docker-for-tf-with-gcloud
    steps:
     - checkout
     - setup_remote_docker
     - run:
         name: simple deployment
         command: |
            echo $GOOGLE_CRED > terraform/credentials.json
            cat terraform/credentials.json
            gcloud auth activate-service-account --key-file /root/project/terraform/credentials.json
            gcloud --quiet config set project $PROJECT
            gcloud --quiet config set compute/zone $GOOGLE_COMPUTE_ZONE
            export GOOGLE_APPLICATION_CREDENTIALS="/root/project/terraform/credentials.json"
            cd terraform/
            terraform init
            terraform apply -auto-approve
            cp /root/project/terraform/mykey.pem /root/project/${CIRCLE_SHA1::7}.pem
            gsutil cp /root/project/${CIRCLE_SHA1::7}.pem gs://tf-for-terraform-state-python-flask-app
  destroy:
    docker:
      - image: shakurit0/docker-for-tf-with-gcloud
    steps:
     - checkout
     - setup_remote_docker
     - run:
         name: simple deployment
         command: |
           echo $GOOGLE_CRED > terraform/credentials.json
           export GOOGLE_APPLICATION_CREDENTIALS="/root/project/terraform/credentials.json"
           cd terraform/
           terraform init
           terraform destroy -auto-approve
workflows:
  version: 2
  build_push_and_deploy:
    jobs:
      - init_and_plan:
         context:
           - flask
      - hold:
          type: approval
          requires:
           - init_and_plan 
      - deploy:
         context:
           - flask
         requires:
           - init_and_plan
           - hold
      - hold2:
          type: approval
          requires:
           - init_and_plan
           - hold
           - deploy
      - destroy:
         context: 
           - flask
         requires:
           - init_and_plan
           - hold
           - deploy
           - hold2
      
